// Generated by gencpp from file vector_map_server/GetCrossWalk.msg
// DO NOT EDIT!


#ifndef VECTOR_MAP_SERVER_MESSAGE_GETCROSSWALK_H
#define VECTOR_MAP_SERVER_MESSAGE_GETCROSSWALK_H

#include <ros/service_traits.h>


#include <vector_map_server/GetCrossWalkRequest.h>
#include <vector_map_server/GetCrossWalkResponse.h>


namespace vector_map_server
{

struct GetCrossWalk
{

typedef GetCrossWalkRequest Request;
typedef GetCrossWalkResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetCrossWalk
} // namespace vector_map_server


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::vector_map_server::GetCrossWalk > {
  static const char* value()
  {
    return "5eaa88405db0c4e45d229b723f6f1eb2";
  }

  static const char* value(const ::vector_map_server::GetCrossWalk&) { return value(); }
};

template<>
struct DataType< ::vector_map_server::GetCrossWalk > {
  static const char* value()
  {
    return "vector_map_server/GetCrossWalk";
  }

  static const char* value(const ::vector_map_server::GetCrossWalk&) { return value(); }
};


// service_traits::MD5Sum< ::vector_map_server::GetCrossWalkRequest> should match 
// service_traits::MD5Sum< ::vector_map_server::GetCrossWalk > 
template<>
struct MD5Sum< ::vector_map_server::GetCrossWalkRequest>
{
  static const char* value()
  {
    return MD5Sum< ::vector_map_server::GetCrossWalk >::value();
  }
  static const char* value(const ::vector_map_server::GetCrossWalkRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::vector_map_server::GetCrossWalkRequest> should match 
// service_traits::DataType< ::vector_map_server::GetCrossWalk > 
template<>
struct DataType< ::vector_map_server::GetCrossWalkRequest>
{
  static const char* value()
  {
    return DataType< ::vector_map_server::GetCrossWalk >::value();
  }
  static const char* value(const ::vector_map_server::GetCrossWalkRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::vector_map_server::GetCrossWalkResponse> should match 
// service_traits::MD5Sum< ::vector_map_server::GetCrossWalk > 
template<>
struct MD5Sum< ::vector_map_server::GetCrossWalkResponse>
{
  static const char* value()
  {
    return MD5Sum< ::vector_map_server::GetCrossWalk >::value();
  }
  static const char* value(const ::vector_map_server::GetCrossWalkResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::vector_map_server::GetCrossWalkResponse> should match 
// service_traits::DataType< ::vector_map_server::GetCrossWalk > 
template<>
struct DataType< ::vector_map_server::GetCrossWalkResponse>
{
  static const char* value()
  {
    return DataType< ::vector_map_server::GetCrossWalk >::value();
  }
  static const char* value(const ::vector_map_server::GetCrossWalkResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // VECTOR_MAP_SERVER_MESSAGE_GETCROSSWALK_H
